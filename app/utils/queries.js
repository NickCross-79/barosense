const queries = {
    createItemsTable:`
        CREATE TABLE items (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            unique_name VARCHAR(100),
            description VARCHAR(500),
            type VARCHAR(30),
            ducat_price VARCHAR(100) NOT NULL,
            credit_price VARCHAR(100) NOT NULL,
            wiki_link VARCHAR(150),
            is_tradable BOOLEAN,
            can_master BOOLEAN,
            masteryReq NUMBER,
            is_mod BOOLEAN,
            is_new BOOLEAN,
            last_date DATE,
            thumbnail TEXT
        );
    `,
    createInventoryTable:`
        CREATE TABLE inventory (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            unique_name VARCHAR(100)
        );
    `,
    dropItemsTable:`
        DROP TABLE IF EXISTS items;
    `,
    dropInventoryTable:`
        DROP TABLE IF EXISTS inventory;
    `,
    insertItem:`
        INSERT INTO items (
            name,
            unique_name,
            description,
            type,
            ducat_price,
            credit_price,
            wiki_link,
            is_tradable,
            can_master,
            masteryReq,
            is_mod,
            is_new,
            last_date,
            thumbnail)
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14);
    `,
    insertInventory:`
        INSERT INTO inventory (
            name,
            uniqueName)
        VALUES ($1, $2);
    `,
    findItem:`
        SELECT * FROM items
        WHERE name = $1;
    `,
    getItems:`
        SELECT * FROM items;
    `,
    getInventory:`
        SELECT * FROM inventory;
    `,
    getNewItem:`
        SELECT * FROM items
        ORDER BY id DESC
        LIMIT 1;
    `,
    updateItemDate:`
        UPDATE items
        SET last_date = ?
        WHERE unique_name = ?
    `
}

export default queries;